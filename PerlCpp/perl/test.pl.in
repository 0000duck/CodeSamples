#!@PERL_EXECUTABLE@ -w
#
use strict;
use warnings;

use File::Spec::Functions;

BEGIN {
  unshift @INC, catfile("@CMAKE_CURRENT_BINARY_DIR@", "xs");
  unshift @INC, catfile("@CMAKE_CURRENT_SOURCE_DIR@", "pm");
  unshift @INC, catfile("@CMAKE_CURRENT_BINARY_DIR@", "src");
}

use Test;

sub print_base {
  my ($base) = @_;
  print $base->getString(), "\n";
}

sub test_fun {
  my $x = new Test::Derived;
  $x->setInt(57);
  $x->virtualFun();
  $x->setDouble (23.45);
  my $arr = $x->getVector();

  foreach (@$arr) {
    print $_, "\n";
  }

  return $x;
}

sub array_fun {
  my $arr = @_;
  print "Coming Here\n";
  print join("\n", @$arr); 
}

sub func_return_array {
  my ($string) = @_;

  return split(/\./, $string);
}

sub test_interface {
  my $iface = Test::Interface->new();

  $iface->setDouble("Main.Value.Double", 5.0);
  $iface->setInteger("Main.Value.Integer", 13);
  $iface->setString("Main.Value.String", "Test Interface");

  my ($child, $val);

  $child = $iface->getChild("Main.Value");
  $val = $child->getDouble("Double");
  print $val, "\n";
  $val = $child->getInteger("Integer");
  print $val, "\n";
  $val = $child->getString("String");
  print $val, "\n";
}
